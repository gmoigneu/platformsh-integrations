version: 2
jobs:
  build:
    working_directory: /var/www/html
    docker:
      - image: php:7.1.4-apache
        environment:
          APP_ENV: test
      - image: mysql:5.7
        environment:
          - MYSQL_ROOT_PASSWORD=tester
          - MYSQL_USER=tester
          - MYSQL_PASSWORD=tester
          - MYSQL_DATABASE=circle_test
    steps:
      - run:
          name: Install system packages
          command: apt-get update && apt-get -y install git libpng-dev zlib1g-dev libicu-dev g++ wget
      - run:
          name: Install PHP extensions
          command: docker-php-ext-install pdo gd intl exif pdo_mysql
      - checkout
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Install Composer
          command: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php -r "if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('https://composer.github.io/installer.sig'))) { echo 'Installer verified'; } else { echo 'Installer invalid'; unlink('composer-setup.php'); } echo PHP_EOL;"
            php composer-setup.php
            php -r "unlink('composer-setup.php');"
      - run:
          name: Display PHP information
          command: |
            php -v
            php -i
            php composer.phar --version
      - run:
          name: Set php timezone
          command: echo "date.timezone = Europe/Paris" >> /usr/local/etc/php/php.ini
      - run:
          name: Wait for db
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m
      - run:
          name: Copy parameters
          command: cp app/config/parameters_test.circleci.yml app/config/parameters_test.yml
      - run:
          name: Install project dependencies
          command: php composer.phar install --prefer-source --no-interaction
      - run:
          name: Install Sylius
          command: |
            php bin/console --env=test --no-debug --ansi cache:clear --no-warmup
            php bin/console --env=test --no-debug --ansi cache:warmup
            php bin/console --env=test --no-debug --ansi assets:install
            php bin/console --env=test --no-debug --ansi sylius:theme:assets:install
            php bin/console --env=test --no-debug --ansi sylius:install
      - run:
          name: Run CS tests
          command: vendor/bin/phpcs
      - run:
          name: Run Unit tests
          command: vendor/bin/phpunit